"use strict";var ApplicationConfiguration=function(){var applicationModuleName="agrarias",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("condicions"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("personas"),ApplicationConfiguration.registerModule("programas"),ApplicationConfiguration.registerModule("tipos"),ApplicationConfiguration.registerModule("universidads"),ApplicationConfiguration.registerModule("users"),angular.module("condicions").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Condiciones","condicions","dropdown","/condicions(/create)?"),Menus.addSubMenuItem("topbar","condicions","Listar Condiciones","condicions"),Menus.addSubMenuItem("topbar","condicions","Crear Condici√≥n","condicions/create")}]),angular.module("condicions").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCondicions",{url:"/condicions",templateUrl:"modules/condicions/views/list-condicions.client.view.html"}).state("createCondicion",{url:"/condicions/create",templateUrl:"modules/condicions/views/create-condicion.client.view.html"}).state("viewCondicion",{url:"/condicions/:condicionId",templateUrl:"modules/condicions/views/view-condicion.client.view.html"}).state("editCondicion",{url:"/condicions/:condicionId/edit",templateUrl:"modules/condicions/views/edit-condicion.client.view.html"})}]),angular.module("condicions").controller("CondicionsController",["$scope","$stateParams","$location","Authentication","Condicions",function($scope,$stateParams,$location,Authentication,Condicions){$scope.authentication=Authentication,$scope.create=function(){var condicion=new Condicions({name:this.name});condicion.$save(function(response){$location.path("condicions/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(condicion){if(condicion){condicion.$remove();for(var i in $scope.condicions)$scope.condicions[i]===condicion&&$scope.condicions.splice(i,1)}else $scope.condicion.$remove(function(){$location.path("condicions")})},$scope.update=function(){var condicion=$scope.condicion;condicion.$update(function(){$location.path("condicions/"+condicion._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.condicions=Condicions.query()},$scope.findOne=function(){$scope.condicion=Condicions.get({condicionId:$stateParams.condicionId})}}]),angular.module("condicions").factory("Condicions",["$resource",function($resource){return $resource("condicions/:condicionId",{condicionId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("personas").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Personas","personas","dropdown","/personas(/create)?"),Menus.addSubMenuItem("topbar","personas","Listar Personas","personas"),Menus.addSubMenuItem("topbar","personas","Crear Persona","personas/create")}]),angular.module("personas").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPersonas",{url:"/personas",templateUrl:"modules/personas/views/list-personas.client.view.html"}).state("createPersona",{url:"/personas/create",templateUrl:"modules/personas/views/create-persona.client.view.html"}).state("viewPersona",{url:"/personas/:personaId",templateUrl:"modules/personas/views/view-persona.client.view.html"}).state("editPersona",{url:"/personas/:personaId/edit",templateUrl:"modules/personas/views/edit-persona.client.view.html"})}]),angular.module("personas").controller("PersonasController",["$scope","$stateParams","$location","Authentication","Personas",function($scope,$stateParams,$location,Authentication,Personas){$scope.authentication=Authentication,$scope.create=function(){var persona=new Personas.personas({nombre:this.nombre,apellido:this.apellido,dni:this.dni,telefono:this.telefono,email:this.email,periodo:this.periodo,anio_movilidad:this.anio_movilidad,universidad:this.universidad,tutor:this.tutor,condicion:this.condicion,programa:this.programa,tipo:this.tipo,observaciones:this.observaciones});persona.$save(function(response){$location.path("personas/"+response._id),$scope.nombre="",$scope.apellido="",$scope.dni="",$scope.telefono="",$scope.email="",$scope.periodo="",$scope.anio_movilidad="",$scope.universidad="",$scope.tutor="",$scope.condicion="",$scope.programa="",$scope.tipo="",$scope.observaciones=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(persona){if(persona){persona.$remove();for(var i in $scope.personas)$scope.personas[i]===persona&&$scope.personas.splice(i,1)}else $scope.persona.$remove(function(){$location.path("personas")})},$scope.update=function(){var persona=$scope.persona;persona.$update(function(){$location.path("personas/"+persona._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.personas=Personas.personas.query(),$scope.programas=Personas.programas.query(),$scope.tipos=Personas.tipos.query(),$scope.universidades=Personas.universidades.query(),$scope.condiciones=Personas.condiciones.query()},$scope.findOne=function(){$scope.persona=Personas.personas.get({personaId:$stateParams.personaId})}}]),angular.module("personas").factory("Personas",["$resource","$http",function($resource,$http){return{personas:$resource("personas/:personaId",{personaId:"@_id"},{update:{method:"PUT"}}),programas:$resource("programas/:programaId",{programaId:"@_id"},{update:{method:"PUT"}}),tipos:$resource("tipos/:tipoId",{tipoId:"@_id"},{update:{method:"PUT"}}),universidades:$resource("universidads/:universidadId",{universidadId:"@_id"},{update:{method:"PUT"}}),condiciones:$resource("condicions/:condicionId",{condicionId:"@_id"},{update:{method:"PUT"}})}}]),angular.module("programas").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Programas","programas","dropdown","/programas(/create)?"),Menus.addSubMenuItem("topbar","programas","Listar Programas","programas"),Menus.addSubMenuItem("topbar","programas","Crear Programa","programas/create")}]),angular.module("programas").config(["$stateProvider",function($stateProvider){$stateProvider.state("listProgramas",{url:"/programas",templateUrl:"modules/programas/views/list-programas.client.view.html"}).state("createPrograma",{url:"/programas/create",templateUrl:"modules/programas/views/create-programa.client.view.html"}).state("viewPrograma",{url:"/programas/:programaId",templateUrl:"modules/programas/views/view-programa.client.view.html"}).state("editPrograma",{url:"/programas/:programaId/edit",templateUrl:"modules/programas/views/edit-programa.client.view.html"})}]),angular.module("programas").controller("ProgramasController",["$scope","$stateParams","$location","Authentication","Programas",function($scope,$stateParams,$location,Authentication,Programas){$scope.authentication=Authentication,$scope.create=function(){var programa=new Programas({name:this.name});programa.$save(function(response){$location.path("programas/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(programa){if(programa){programa.$remove();for(var i in $scope.programas)$scope.programas[i]===programa&&$scope.programas.splice(i,1)}else $scope.programa.$remove(function(){$location.path("programas")})},$scope.update=function(){var programa=$scope.programa;programa.$update(function(){$location.path("programas/"+programa._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.programas=Programas.query()},$scope.findOne=function(){$scope.programa=Programas.get({programaId:$stateParams.programaId})}}]),angular.module("programas").factory("Programas",["$resource",function($resource){return $resource("programas/:programaId",{programaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tipos").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Tipos","tipos","dropdown","/tipos(/create)?"),Menus.addSubMenuItem("topbar","tipos","Listar Tipos","tipos"),Menus.addSubMenuItem("topbar","tipos","Crear Tipo","tipos/create")}]),angular.module("tipos").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTipos",{url:"/tipos",templateUrl:"modules/tipos/views/list-tipos.client.view.html"}).state("createTipo",{url:"/tipos/create",templateUrl:"modules/tipos/views/create-tipo.client.view.html"}).state("viewTipo",{url:"/tipos/:tipoId",templateUrl:"modules/tipos/views/view-tipo.client.view.html"}).state("editTipo",{url:"/tipos/:tipoId/edit",templateUrl:"modules/tipos/views/edit-tipo.client.view.html"})}]),angular.module("tipos").controller("TiposController",["$scope","$stateParams","$location","Authentication","Tipos",function($scope,$stateParams,$location,Authentication,Tipos){$scope.authentication=Authentication,$scope.create=function(){var tipo=new Tipos({name:this.name});tipo.$save(function(response){$location.path("tipos/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(tipo){if(tipo){tipo.$remove();for(var i in $scope.tipos)$scope.tipos[i]===tipo&&$scope.tipos.splice(i,1)}else $scope.tipo.$remove(function(){$location.path("tipos")})},$scope.update=function(){var tipo=$scope.tipo;tipo.$update(function(){$location.path("tipos/"+tipo._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.tipos=Tipos.query()},$scope.findOne=function(){$scope.tipo=Tipos.get({tipoId:$stateParams.tipoId})}}]),angular.module("tipos").factory("Tipos",["$resource",function($resource){return $resource("tipos/:tipoId",{tipoId:"@_id"},{update:{method:"PUT"}})}]),angular.module("universidads").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Universidades","universidads","dropdown","/universidads(/create)?"),Menus.addSubMenuItem("topbar","universidads","Listar Universidads","universidads"),Menus.addSubMenuItem("topbar","universidads","Nueva Universidad","universidads/create")}]),angular.module("universidads").config(["$stateProvider",function($stateProvider){$stateProvider.state("listUniversidads",{url:"/universidads",templateUrl:"modules/universidads/views/list-universidads.client.view.html"}).state("createUniversidad",{url:"/universidads/create",templateUrl:"modules/universidads/views/create-universidad.client.view.html"}).state("viewUniversidad",{url:"/universidads/:universidadId",templateUrl:"modules/universidads/views/view-universidad.client.view.html"}).state("editUniversidad",{url:"/universidads/:universidadId/edit",templateUrl:"modules/universidads/views/edit-universidad.client.view.html"})}]),angular.module("universidads").controller("UniversidadsController",["$scope","$stateParams","$location","Authentication","Universidads",function($scope,$stateParams,$location,Authentication,Universidads){$scope.authentication=Authentication,$scope.create=function(){var universidad=new Universidads({name:this.name});universidad.$save(function(response){$location.path("universidads/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(universidad){if(universidad){universidad.$remove();for(var i in $scope.universidads)$scope.universidads[i]===universidad&&$scope.universidads.splice(i,1)}else $scope.universidad.$remove(function(){$location.path("universidads")})},$scope.update=function(){var universidad=$scope.universidad;universidad.$update(function(){$location.path("universidads/"+universidad._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.universidads=Universidads.query()},$scope.findOne=function(){$scope.universidad=Universidads.get({universidadId:$stateParams.universidadId})}}]),angular.module("universidads").factory("Universidads",["$resource",function($resource){return $resource("universidads/:universidadId",{universidadId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);